{"version":3,"sources":["webpack://game-snake/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/createClass.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/get.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/inherits.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/superPropBase.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/typeof.js","webpack://game-snake/./src/Views/Game/game.html","webpack://game-snake/webpack/bootstrap","webpack://game-snake/webpack/runtime/compat get default export","webpack://game-snake/webpack/runtime/define property getters","webpack://game-snake/webpack/runtime/hasOwnProperty shorthand","webpack://game-snake/./src/Views/View.ts","webpack://game-snake/./src/Utils/ObjectUtils.ts","webpack://game-snake/./src/Enums/Direction.ts","webpack://game-snake/./src/Models/ElementView.ts","webpack://game-snake/./src/Models/Head.ts","webpack://game-snake/./src/Models/BodyPart.ts","webpack://game-snake/./src/Models/Snake.ts","webpack://game-snake/./src/Models/Position.ts","webpack://game-snake/./src/Models/Fruit.ts","webpack://game-snake/./src/main.ts","webpack://game-snake/./src/Views/Game/game.ts"],"names":["module","exports","self","ReferenceError","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","superPropBase","_get","property","receiver","Reflect","get","base","desc","getOwnPropertyDescriptor","call","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","_typeof","assertThisInitialized","_setPrototypeOf","p","object","hasOwnProperty","Symbol","iterator","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","prop","View","parent","this","htmlString","innerHTML","Direction","ObjectUtils","cloneObj","ElementView","position","size","direction","stepSize","movingTo","Up","y","Down","Left","x","Right","clone","equals","context","fillRect","Head","canvas","maxX","width","maxY","height","OnTouchMargin","isInCanvas","nextDirection","rear","next","touchBody","OnTouchBody","draw","fillStyle","toView","touch","stop","touchHead","index","countChangeDirection","addRear","BodyPart","rearNext","diference","moveTo","name","headPosition","Snake","head","Position","Fruit","Math","random","goTo","ChangeDirection","canDrawInLoop","initSnake","Draw","Score","updateScore","html","require","render","document","getElementById","getContext","scoreElement","Resize","fruit","blockSize","DrawInLoop","Events","snake","GameOver","clearRect","nextMovement","StepSize","drawHead","setTimeout","Delay","getElementsByTagName","setAttribute","window","innerHeight","gameContainer","querySelector","offsetHeight","offsetWidth","addEventListener","e","keydown","touchstart","touchend","touches","clientX","clientY","touchstartPosition","changedTouches","xMovement","yMovement","abs","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","func","directionTo","ifNot","move","score","ceil","textContent","init","navigator","serviceWorker","register","then","registration","console","log","scope","error"],"mappings":"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","file":"main.js","sourcesContent":["function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","// Module\nvar code = \"<header> <div class=\\\"content-center\\\"> <h1>Snake</h1> </div> </header> <section> <div class=\\\"game-container content-center\\\"> <canvas id=\\\"game\\\"></canvas> <div class=\\\"score\\\"> <p id=\\\"score\\\">0xp</p> </div> </div> </section>\";\n// Exports\nmodule.exports = code;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","export class View {\r\n\r\n    parent: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement) {\r\n        this.parent = parent;\r\n    }\r\n\r\n    render(htmlString: string) {\r\n        this.parent.innerHTML = htmlString;\r\n    }\r\n}","export class ObjectUtils {\r\n  static clone<T>(obj: T): T {\r\n    const cloneObj = { ...obj } as any;\r\n    cloneObj.__proto__ = (obj as any).__proto__;\r\n    return cloneObj;\r\n  }\r\n}","export enum Direction {\r\n    stop, Up, Down, Left, Right\r\n}","import { Position } from './Position';\r\nimport { Direction } from '../Enums/Direction';\r\nimport { ObjectUtils } from '../Utils/ObjectUtils';\r\n\r\nexport class ElementView {\r\n    position: Position;\r\n    movingTo: Direction;\r\n    size: number;\r\n    constructor(position: Position, size: number) {\r\n        this.position = position;\r\n        this.size = size;\r\n    }\r\n    moveTo(direction: Direction, stepSize: number) {\r\n        this.movingTo = direction;\r\n        switch (direction) {\r\n            case Direction.Up:\r\n                this.position.y -= stepSize\r\n                break;\r\n            case Direction.Down:\r\n                this.position.y += stepSize\r\n                break;\r\n            case Direction.Left:\r\n                this.position.x -= stepSize\r\n                break;\r\n            case Direction.Right:\r\n                this.position.x += stepSize\r\n                break;\r\n        }\r\n    }\r\n    goTo(position: Position) {\r\n        this.position = ObjectUtils.clone(position)\r\n    }\r\n    touch(position: Position): boolean {\r\n        return this.position.equals(position);\r\n    }\r\n    protected toView(context: CanvasRenderingContext2D) {\r\n        context.fillRect(this.position.x, this.position.y, this.size, this.size);\r\n    }\r\n}\r\n","import { BodyPart } from './BodyPart';\r\nimport { Direction } from '../Enums/Direction';\r\n\r\nexport class Head extends BodyPart {\r\n\r\n    OnTouchMargin: () => void;\r\n    OnTouchBody: () => void;\r\n    isInCanvas(canvas: HTMLCanvasElement) {\r\n        const x = this.position.x\r\n        const y = this.position.y\r\n        const maxX = canvas.width - this.size;\r\n        const maxY = canvas.height - this.size;\r\n        if (x < 0 || x > maxX || y < 0 || y > maxY) {\r\n            this.OnTouchMargin();\r\n        }\r\n    }\r\n\r\n    nextMovement(canvas: HTMLCanvasElement, stepSize: number): boolean {\r\n        this.isInCanvas(canvas)\r\n        if (this.position.x % this.size === 0 && this.position.y % this.size === 0 && this.nextDirection) {\r\n            if (this.rear) {\r\n                this.rear.nextDirection = this.direction;\r\n            }\r\n            this.direction = this.nextDirection;\r\n        }\r\n        this.next(stepSize, false)\r\n        this.rear?.next(stepSize, true)\r\n        if (this.touchBody()) {\r\n            this.OnTouchBody?.();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    drawHead(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, move = true) {\r\n        this.rear?.draw(context);\r\n        context.fillStyle = '#FF0000';\r\n        this.toView(context);\r\n    }\r\n    touchBody(): boolean {\r\n        return (this.touch(this.rear?.position) && this.direction !== Direction.stop) || this.rear?.touchHead(this.position);\r\n    }\r\n}\r\n","import { Position } from './Position';\r\nimport { ObjectUtils } from '../Utils/ObjectUtils';\r\nimport { ElementView } from './ElementView';\r\nimport { Direction } from '../Enums/Direction';\r\n\r\nexport class BodyPart extends ElementView {\r\n    rear: BodyPart;\r\n    direction: Direction;\r\n    nextDirection: Direction;\r\n    index: number;\r\n    countChangeDirection: number;\r\n\r\n    constructor(position: Position, size: number, direction: Direction, index: number) {\r\n        super(position, size)\r\n        this.direction = direction;\r\n        this.index = index;\r\n        this.countChangeDirection = this.size;\r\n    }\r\n    addRear() {\r\n        if (this.rear) {\r\n            this.rear.addRear();\r\n        } else {\r\n            this.rear = new BodyPart(ObjectUtils.clone(this.position), this.size, Direction.stop, this.index + 1);\r\n        }\r\n    }\r\n    next(stepSize: number, rearNext: boolean): void {\r\n        const diference = (this.size % stepSize)\r\n        if (diference >= this.countChangeDirection) {\r\n            stepSize = diference\r\n        }\r\n        this.moveTo(this.direction, stepSize)\r\n        if (!(this.constructor.name === 'Head' && this.direction === Direction.stop)) {\r\n            this.countChangeDirection -= stepSize;\r\n        }\r\n        if (this.countChangeDirection === 0) {\r\n            if (this.rear) {\r\n                this.rear.nextDirection = this.direction;\r\n            }\r\n            this.direction = this.nextDirection;\r\n            this.countChangeDirection = this.size;\r\n        }\r\n        if (rearNext) {\r\n            this.rear?.next(stepSize, true)\r\n        }\r\n    }\r\n    moveTo(direction: Direction, stepSize: number) {\r\n        if (this.direction !== Direction.stop) {\r\n            super.moveTo(direction, stepSize);\r\n        }\r\n    }\r\n    draw(context: CanvasRenderingContext2D) {\r\n        context.fillStyle = '#0F0FFF';\r\n        this.toView(context);\r\n        this.rear?.draw(context);\r\n    }\r\n    touchHead(headPosition: Position): boolean {\r\n        return this.touch(headPosition) || this.rear?.touchHead(headPosition);\r\n    }\r\n\r\n}\r\n","import { Head } from './Head';\r\nimport { Position } from './Position';\r\nimport { Direction } from '../Enums/Direction';\r\n\r\nexport class Snake {\r\n    head: Head;\r\n    size: number;\r\n\r\n    constructor(position: Position, size: number) {\r\n        this.size = size;\r\n        this.head = new Head(position, this.size, Direction.stop, 0);\r\n    }\r\n}\r\n\r\n","export class Position {\r\n    x: number;\r\n    y: number;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    equals(position: Position) {\r\n        return this.x === position?.x && this.y === position?.y\r\n    }\r\n\r\n}\r\n","import { ElementView } from './ElementView';\r\nimport { Position } from './Position';\r\n\r\nexport class Fruit extends ElementView {\r\n\r\n    draw(context: CanvasRenderingContext2D) {\r\n        context.fillStyle = '#FFF000';\r\n        super.toView(context);\r\n    }\r\n    move(maxX: number, maxY: number) {\r\n        let x = Math.random() * maxX;\r\n        x = x - (x % this.size);\r\n        let y = Math.random() * maxY;\r\n        y = y - (y % this.size);\r\n        this.goTo(new Position(x, y));\r\n    }\r\n\r\n}","import './index.scss';\r\nimport './manifest.json'\r\nimport { Game } from './Views/Game/game';\r\n\r\n\r\nfunction registerServiceWorker(): void {\r\n  if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.register('/sw.js')\r\n          .then((registration) =>\r\n              console.log(`Service Worker registration complete, scope: '${registration.scope}'`,registration))\r\n          .catch((error) =>\r\n              console.log(`Service Worker registration failed with error: '${error}'`,error));\r\n  }\r\n}\r\n\r\n\r\nconst base = document.getElementById('base');\r\nconst game = new Game(base);\r\ngame.init();\r\n\r\nregisterServiceWorker();","import { View } from '../View';\r\nimport { Snake } from '../../Models/Snake';\r\nimport { Fruit } from '../../Models/Fruit';\r\nimport { Position } from '../../Models/Position';\r\nimport { Direction } from '../../Enums/Direction';\r\nexport class Game extends View {\r\n\r\n    touchstartPosition = new Position(0, 0)\r\n    blockSize = 50;\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n\r\n    canDrawInLoop = false;\r\n    snake: Snake;\r\n    fruit: Fruit;\r\n\r\n    StepSize = 2;\r\n    Score = 0;\r\n    Delay = 10;\r\n    scoreElement: HTMLParagraphElement;\r\n\r\n    init() {\r\n        const html = require('./game.html');\r\n        this.render(html);\r\n        this.canvas = document.getElementById('game') as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.scoreElement = document.getElementById('score') as HTMLParagraphElement;\r\n        this.Resize();\r\n        this.initSnake()\r\n        this.fruit = new Fruit(new Position(200, 200), this.blockSize)\r\n        this.DrawInLoop();\r\n        this.Draw();\r\n        this.Events();\r\n\r\n    }\r\n    initSnake() {\r\n        this.snake = new Snake(new Position(0, 0), this.blockSize);\r\n        this.snake.head.OnTouchMargin = this.GameOver;\r\n    }\r\n    Draw() {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.touch();\r\n\r\n        if (this.snake.head.nextMovement(this.canvas, this.StepSize)) {\r\n            this.snake.head.drawHead(this.canvas, this.context);\r\n        } else {\r\n            this.GameOver()\r\n        }\r\n        this.fruit.draw(this.context);\r\n    }\r\n\r\n    DrawInLoop() {\r\n        if (this.canDrawInLoop) { this.Draw(); }\r\n        setTimeout(() => { this.DrawInLoop() }, this.Delay);\r\n    }\r\n    Resize() {\r\n        document.getElementsByTagName('body')[0].setAttribute('style', `max-height: ${window.innerHeight}px`);\r\n        const gameContainer = document.querySelector('.game-container') as HTMLElement;\r\n        const offsetHeight = gameContainer.offsetHeight\r\n        const offsetWidth = gameContainer.offsetWidth\r\n        this.canvas.height = offsetHeight - (offsetHeight % this.blockSize);\r\n        this.canvas.width = offsetWidth - (offsetWidth % this.blockSize);\r\n    }\r\n\r\n    Events() {\r\n        window.addEventListener('resize', (e) => { this.Resize(); });\r\n        window.addEventListener('keydown', (e) => { this.keydown(e) });\r\n        window.addEventListener('touchstart', (e) => { this.touchstart(e) });\r\n        window.addEventListener('touchend', (e) => { this.touchend(e) });\r\n    }\r\n    touchstart(e: TouchEvent) {\r\n        const x = e.touches[0].clientX;\r\n        const y = e.touches[0].clientY;\r\n        this.touchstartPosition = new Position(x, y);\r\n    }\r\n    touchend(e: TouchEvent) {\r\n        const x = e.changedTouches[0].clientX;\r\n        const y = e.changedTouches[0].clientY;\r\n        const touchstart = this.touchstartPosition;\r\n        const touchend = new Position(x, y);\r\n        const xMovement = touchstart.x - touchend.x;\r\n        const yMovement = touchstart.y - touchend.y;\r\n        const moveInX = Math.abs(xMovement) > Math.abs(yMovement)\r\n        if (moveInX) {\r\n            if (xMovement < -1) {\r\n                this.ArrowRight()\r\n            } else if (xMovement > 1) {\r\n                this.ArrowLeft()\r\n            }\r\n        } else {\r\n            if (yMovement > 1) {\r\n                this.ArrowUp()\r\n            } else if (yMovement < -1) {\r\n                this.ArrowDown()\r\n            }\r\n        }\r\n    }\r\n    keydown(e: KeyboardEvent) {\r\n        const func = (this as any)[e.key]\r\n        if (func) {\r\n            func();\r\n        }\r\n    }\r\n\r\n    ChangeDirection(directionTo: Direction, ifNot: Direction): void {\r\n        const direction = this.snake.head.direction;\r\n        this.canDrawInLoop = true;\r\n        if (direction !== ifNot)\r\n            this.snake.head.nextDirection = directionTo;\r\n    }\r\n    ArrowLeft = () => this.ChangeDirection(Direction.Left, Direction.Right)\r\n    ArrowRight = () => this.ChangeDirection(Direction.Right, Direction.Left)\r\n    ArrowUp = () => this.ChangeDirection(Direction.Up, Direction.Down)\r\n    ArrowDown = () => this.ChangeDirection(Direction.Down, Direction.Up)\r\n\r\n    touch() {\r\n        if (this.snake.head.position.equals(this.fruit.position)) {\r\n            this.fruit.move(this.canvas.width, this.canvas.height);\r\n            this.snake.head.addRear();\r\n            this.Score++;\r\n            this.updateScore()\r\n        }\r\n    }\r\n\r\n    updateScore() {\r\n        const score = this.Score / 4;\r\n        this.Delay = Math.ceil(score - (Math.ceil((score + 1) / 10) * 10)) * -1;\r\n        this.StepSize = this.Delay <= 5 ? 1 : 2;\r\n        this.scoreElement.textContent = `${this.Score}XP`;\r\n    }\r\n\r\n    GameOver = () => {\r\n        this.canDrawInLoop = false;\r\n        this.initSnake()\r\n        this.Draw();\r\n        this.Score = 0;\r\n        this.updateScore()\r\n    }\r\n}"],"sourceRoot":""}