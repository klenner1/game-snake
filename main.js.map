{"version":3,"sources":["webpack://game-snake/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/createClass.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/inherits.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://game-snake/./node_modules/@babel/runtime/helpers/typeof.js","webpack://game-snake/./src/Views/Game/game.html","webpack://game-snake/webpack/bootstrap","webpack://game-snake/webpack/runtime/compat get default export","webpack://game-snake/webpack/runtime/define property getters","webpack://game-snake/webpack/runtime/hasOwnProperty shorthand","webpack://game-snake/./src/Enums/Direction.ts","webpack://game-snake/./src/Views/View.ts","webpack://game-snake/./src/Models/Position.ts","webpack://game-snake/./src/Utils/ObjectUtils.ts","webpack://game-snake/./src/Models/shapes/Square.ts","webpack://game-snake/./src/Models/ElementView.ts","webpack://game-snake/./src/Models/Head.ts","webpack://game-snake/./src/Models/BodyPart.ts","webpack://game-snake/./src/Models/Snake.ts","webpack://game-snake/./src/Models/Fruit.ts","webpack://game-snake/./src/Models/fills/ColorFill.ts","webpack://game-snake/./src/Models/fills/fill.ts","webpack://game-snake/./src/Models/Theme.ts","webpack://game-snake/./src/main.ts","webpack://game-snake/./src/Views/Game/game.ts"],"names":["module","exports","self","ReferenceError","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","value","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","subClass","superClass","create","constructor","_typeof","assertThisInitialized","call","_setPrototypeOf","p","Symbol","iterator","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","get","prop","hasOwnProperty","Direction","View","parent","this","htmlString","innerHTML","Position","x","y","position","direction","stepSize","Up","Down","Left","Right","ObjectUtils","cloneObj","Square","p1","p2","size","inside","context","name","theme","fill","fillRect","movingTo","move","clone","Head","canvas","view","maxX","width","maxY","height","OnTouchMargin","isInCanvas","nextDirection","next","rear","touchBody","OnTouchBody","touchHead","index","countChangeDirection","addRear","BodyPart","stop","rearNext","diference","moveTo","draw","ToView","headPosition","touch","Snake","head","Fruit","Math","random","goTo","ColorFill","colorHead","bodyColor","fruitColor","fillStyle","Theme","ChangeDirection","canDrawInLoop","moving","initSnake","Draw","Score","updateScore","html","require","render","document","getElementById","getContext","scoreElement","Resize","fruit","blockSize","DrawInLoop","MovimentLoop","Events","snake","GameOver","nextMovement","StepSize","Moviment","setTimeout","Delay","clearRect","getElementsByTagName","setAttribute","window","innerHeight","gameContainer","querySelector","offsetHeight","offsetWidth","addEventListener","e","keydown","touchstart","touchend","touches","clientX","clientY","touchstartPosition","changedTouches","xMovement","yMovement","abs","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","func","directionTo","ifNot","getnextPosition","score","ceil","textContent","init","navigator","serviceWorker","register","location","pathname"],"mappings":"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","file":"main.js","sourcesContent":["function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","// Module\nvar code = \"<header> <div class=\\\"content-center\\\"> <h1>Snake</h1> </div> </header> <section> <div class=\\\"game-container content-center\\\"> <canvas id=\\\"game\\\"></canvas> <div class=\\\"score\\\"> <p id=\\\"score\\\">0xp</p> </div> </div> </section>\";\n// Exports\nmodule.exports = code;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","export enum Direction {\r\n    stop, Up, Down, Left, Right\r\n}","export class View {\r\n\r\n    parent: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement) {\r\n        this.parent = parent;\r\n    }\r\n\r\n    render(htmlString: string) {\r\n        this.parent.innerHTML = htmlString;\r\n    }\r\n}","import { Direction } from '../Enums/Direction';\r\n\r\nexport class Position {\r\n    x: number;\r\n    y: number;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    equals(position: Position) {\r\n        return this.x === position?.x && this.y === position?.y\r\n    }\r\n    toString = () => this.x + ' : ' + this.y\r\n\r\n    move(direction: Direction, stepSize: number) {\r\n        switch (direction) {\r\n            case Direction.Up:\r\n                this.y -= stepSize\r\n                break;\r\n            case Direction.Down:\r\n                this.y += stepSize\r\n                break;\r\n            case Direction.Left:\r\n                this.x -= stepSize\r\n                break;\r\n            case Direction.Right:\r\n                this.x += stepSize\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n","export class ObjectUtils {\r\n  static clone<T>(obj: T): T {\r\n    const cloneObj = { ...obj } as any;\r\n    cloneObj.__proto__ = (obj as any).__proto__;\r\n    return cloneObj;\r\n  }\r\n}","import { Position } from '../Position';\r\nimport { ElementView } from '../ElementView';\r\n\r\nexport class Square extends ElementView {\r\n    \r\n    inside(p1: Position, p2: Position): boolean {\r\n        return p1.x <= p2.x && p1.x + this.size > p2.x\r\n            && p1.y <= p2.y && p1.y + this.size > p2.y;\r\n    }\r\n    touch(position: Position): boolean {\r\n        return this.inside(this.position, position) || this.inside(position, this.position)\r\n    }\r\n    ToView(context: CanvasRenderingContext2D, name: string) {\r\n        this.theme.fill.fill(context,name)\r\n        context.fillRect(this.position.x, this.position.y, this.size, this.size);\r\n    }\r\n\r\n}\r\n","import { Position } from './Position';\r\nimport { Direction } from '../Enums/Direction';\r\nimport { ObjectUtils } from '../Utils/ObjectUtils';\r\nimport { Theme } from './Theme';\r\n\r\nexport abstract class ElementView {\r\n    position: Position;\r\n    movingTo: Direction;\r\n    size: number;\r\n    index: number;\r\n    theme: Theme;\r\n    constructor(position: Position, size: number, theme: Theme) {\r\n        this.position = position;\r\n        this.size = size;\r\n        this.theme = theme\r\n    }\r\n    moveTo(direction: Direction, stepSize: number) {\r\n        this.movingTo = direction;\r\n        this.position.move(direction, stepSize);\r\n    }\r\n    goTo(position: Position) {\r\n        this.position = ObjectUtils.clone(position)\r\n    }\r\n    abstract touch(position: Position): boolean\r\n    abstract ToView(context: CanvasRenderingContext2D, nome: string): void\r\n}\r\n","import { BodyPart } from './BodyPart';\r\nimport { Direction } from '../Enums/Direction';\r\nimport { ElementView } from './ElementView';\r\nimport { ObjectUtils } from '../Utils/ObjectUtils';\r\n\r\nexport class Head extends BodyPart {\r\n\r\n    OnTouchMargin: () => void;\r\n    OnTouchBody: () => void;\r\n    isInCanvas(canvas: HTMLCanvasElement) {\r\n        const x = this.view.position.x\r\n        const y = this.view.position.y\r\n        const maxX = canvas.width - this.view.size;\r\n        const maxY = canvas.height - this.view.size;\r\n        if (x < 0 || x > maxX || y < 0 || y > maxY) {\r\n            this.OnTouchMargin();\r\n        }\r\n    }\r\n\r\n    nextMovement(canvas: HTMLCanvasElement, stepSize: number): boolean {\r\n        this.isInCanvas(canvas)\r\n        if (this.view.position.x % this.view.size === 0 && this.view.position.y % this.view.size === 0 && this.nextDirection) {\r\n            this.direction = this.nextDirection;\r\n        }\r\n        this.next(stepSize, false)\r\n        this.rear?.next(stepSize, true)\r\n        if (this.touchBody()) {\r\n            this.OnTouchBody?.();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    getnextPosition(stepSize: number) {\r\n        const position = ObjectUtils.clone(this.view.position);\r\n        position.move(this.direction, stepSize)\r\n        return position;\r\n    }\r\n    touchBody(): boolean {\r\n        return this.rear?.touchHead(this.view.position);\r\n    }\r\n}\r\n","import { Position } from './Position';\r\nimport { ElementView } from './ElementView';\r\nimport { Direction } from '../Enums/Direction';\r\nimport { Square } from './shapes/Square';\r\n\r\nexport class BodyPart {\r\n    rear: BodyPart;\r\n    direction: Direction;\r\n    nextDirection: Direction;\r\n    index: number;\r\n    countChangeDirection: number;\r\n    view: ElementView;\r\n    constructor(view: ElementView, direction: Direction, index: number) {\r\n        this.view = view;\r\n        this.direction = direction;\r\n        this.index = index;\r\n        this.countChangeDirection = view.size;\r\n    }\r\n    addRear() {\r\n        if (this.rear) {\r\n            this.rear.addRear();\r\n        } else {\r\n            const x = this.view.position.x - (this.view.position.x % this.view.size);\r\n            const y = this.view.position.y - (this.view.position.y % this.view.size);\r\n            const position = new Position(x, y);\r\n            const view = new Square(position, this.view.size, this.view.theme);\r\n            this.rear = new BodyPart(view, Direction.stop, this.index + 1);\r\n        }\r\n    }\r\n    next(stepSize: number, rearNext: boolean): void {\r\n        const diference = (this.view.size % stepSize)\r\n        if (diference >= this.countChangeDirection) {\r\n            stepSize = diference\r\n        }\r\n        this.moveTo(this.direction, stepSize)\r\n        if (!(this.constructor.name === 'Head' && this.direction === Direction.stop)) {\r\n            this.countChangeDirection -= stepSize;\r\n        }\r\n        if (this.countChangeDirection === 0) {\r\n            if (this.rear) {\r\n                this.rear.nextDirection = this.direction;\r\n            }\r\n            this.direction = this.nextDirection;\r\n            this.countChangeDirection = this.view.size;\r\n        }\r\n        if (rearNext) {\r\n            this.rear?.next(stepSize, true)\r\n        }\r\n    }\r\n    moveTo(direction: Direction, stepSize: number) {\r\n        if (this.direction !== Direction.stop) {\r\n            this.view.moveTo(direction, stepSize);\r\n        }\r\n    }\r\n    draw(context: CanvasRenderingContext2D) {\r\n        const name = this.constructor.name\r\n        this.rear?.draw(context);\r\n        this.view.ToView(context,name);\r\n    }\r\n    touchHead(headPosition: Position): boolean {\r\n        return this.index > 4 && this.view.touch(headPosition) || this.rear?.touchHead(headPosition);\r\n    }\r\n\r\n}\r\n","import { Head } from './Head';\r\nimport { Position } from './Position';\r\nimport { Direction } from '../Enums/Direction';\r\nimport { Square } from './shapes/Square';\r\nimport { Theme } from './Theme';\r\n\r\nexport class Snake {\r\n    head: Head;\r\n    size: number;\r\n\r\n    constructor(position:Position,size: number, theme:Theme) {\r\n        this.size = size;\r\n        const view = new Square(position, size, theme);\r\n        this.head = new Head(view, Direction.stop, 0);\r\n    }\r\n}\r\n\r\n","import { ElementView } from './ElementView';\r\nimport { Position } from './Position';\r\nimport { Square } from './shapes/Square';\r\nimport { Theme } from './Theme';\r\n\r\nexport class Fruit {\r\n    view: ElementView\r\n    constructor(position: Position, size: number, theme: Theme) {\r\n        this.view = new Square(position, size, theme)\r\n    }\r\n    draw(context: CanvasRenderingContext2D) {\r\n        this.view.ToView(context, this.constructor.name);\r\n    }\r\n    move(maxX: number, maxY: number) {\r\n        let x = Math.random() * maxX;\r\n        x = x - (x % this.view.size);\r\n        let y = Math.random() * maxY;\r\n        y = y - (y % this.view.size);\r\n        this.view.goTo(new Position(x, y));\r\n    }\r\n\r\n}","import { Fill } from \"./fill\";\r\n\r\nexport class ColorFill extends Fill {\r\n    bodyColor: string\r\n    colorHead: string\r\n    fruitColor: string\r\n    constructor(colorHead: string, bodyColor: string, fruitColor: string) {\r\n        super()\r\n        this.colorHead = colorHead;\r\n        this.bodyColor = bodyColor;\r\n        this.fruitColor = fruitColor;\r\n    }\r\n    fillHead(context: CanvasRenderingContext2D): void {\r\n        context.fillStyle = this.colorHead;\r\n    }\r\n    fillBody(context: CanvasRenderingContext2D): void {\r\n        context.fillStyle = this.bodyColor;\r\n    }\r\n    fillFuit(context: CanvasRenderingContext2D): void {\r\n        context.fillStyle = this.fruitColor;\r\n    }\r\n}","export abstract class Fill {\r\n    fill(context: CanvasRenderingContext2D, name: string): void {\r\n        (this as any)['fill' + name]?.()\r\n    }\r\n    abstract fillHead(context: CanvasRenderingContext2D): void;\r\n    abstract fillBody(context: CanvasRenderingContext2D): void;\r\n    abstract fillFuit(context: CanvasRenderingContext2D): void;\r\n\r\n}","import { Fill } from './fills/Fill';\r\nexport class Theme {\r\n    fill: Fill;\r\n    constructor(fill: Fill) {\r\n        this.fill = fill\r\n    }\r\n}","import './index.scss';\r\nimport './manifest.json'\r\nimport { Game } from './Views/Game/game';\r\n\r\n\r\nfunction registerServiceWorker(): void {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.register(document.location.pathname + 'sw.js')\r\n    }\r\n}\r\n\r\n\r\nconst base = document.getElementById('base');\r\nconst game = new Game(base);\r\ngame.init();\r\n\r\nregisterServiceWorker();","import { View } from '../View';\r\nimport { Snake } from '../../Models/Snake';\r\nimport { Fruit } from '../../Models/Fruit';\r\nimport { Position } from '../../Models/Position';\r\nimport { Direction } from '../../Enums/Direction';\r\nimport { ColorFill } from '../../Models/fills/ColorFill';\r\nimport { Theme } from '../../Models/Theme';\r\nexport class Game extends View {\r\n\r\n    touchstartPosition = new Position(0, 0)\r\n    blockSize = 50;\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n\r\n    canDrawInLoop = false;\r\n    moving = false;\r\n    snake: Snake;\r\n    fruit: Fruit;\r\n\r\n    StepSize = 2;\r\n    Score = 0;\r\n    Delay = 10;\r\n    scoreElement: HTMLParagraphElement;\r\n    theme: Theme\r\n    init() {\r\n        this.theme = new Theme(new ColorFill('#FF0000', '#00FF00', '#FFF000'));\r\n        const html = require('./game.html');\r\n        this.render(html);\r\n        this.canvas = document.getElementById('game') as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.scoreElement = document.getElementById('score') as HTMLParagraphElement;\r\n        this.Resize();\r\n        this.initSnake()\r\n        this.fruit = new Fruit(new Position(200, 200), this.blockSize, this.theme)\r\n        this.DrawInLoop();\r\n        this.MovimentLoop()\r\n        this.Draw();\r\n        this.Events();\r\n\r\n    }\r\n    initSnake() {\r\n        this.snake = new Snake(new Position(0, 0), this.blockSize, this.theme);\r\n        this.snake.head.OnTouchMargin = this.GameOver;\r\n    }\r\n    Moviment() {\r\n        this.touch();\r\n        if (this.snake.head.nextMovement(this.canvas, this.StepSize)) {\r\n            this.snake.head.draw(this.context);\r\n        } else {\r\n            this.GameOver()\r\n        }\r\n    }\r\n    MovimentLoop() {\r\n        if (this.moving) { this.Moviment(); }\r\n        setTimeout(() => { this.MovimentLoop() }, this.Delay);\r\n    }\r\n    Draw() {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.snake.head.draw(this.context);\r\n        this.fruit.draw(this.context);\r\n    }\r\n\r\n    DrawInLoop() {\r\n        if (this.canDrawInLoop) { this.Draw(); }\r\n        setTimeout(() => { this.DrawInLoop() }, 1);\r\n    }\r\n    Resize() {\r\n        document.getElementsByTagName('body')[0].setAttribute('style', `max-height: ${window.innerHeight}px`);\r\n        const gameContainer = document.querySelector('.game-container') as HTMLElement;\r\n        const offsetHeight = gameContainer.offsetHeight\r\n        const offsetWidth = gameContainer.offsetWidth\r\n        this.canvas.height = offsetHeight - (offsetHeight % this.blockSize);\r\n        this.canvas.width = offsetWidth - (offsetWidth % this.blockSize);\r\n    }\r\n\r\n    Events() {\r\n        window.addEventListener('resize', (e) => { this.Resize(); });\r\n        window.addEventListener('keydown', (e) => { this.keydown(e) });\r\n        window.addEventListener('touchstart', (e) => { this.touchstart(e) });\r\n        window.addEventListener('touchend', (e) => { this.touchend(e) });\r\n    }\r\n    touchstart(e: TouchEvent) {\r\n        const x = e.touches[0].clientX;\r\n        const y = e.touches[0].clientY;\r\n        this.touchstartPosition = new Position(x, y);\r\n    }\r\n    touchend(e: TouchEvent) {\r\n        const x = e.changedTouches[0].clientX;\r\n        const y = e.changedTouches[0].clientY;\r\n        const touchstart = this.touchstartPosition;\r\n        const touchend = new Position(x, y);\r\n        const xMovement = touchstart.x - touchend.x;\r\n        const yMovement = touchstart.y - touchend.y;\r\n        const moveInX = Math.abs(xMovement) > Math.abs(yMovement)\r\n        if (moveInX) {\r\n            if (xMovement < -1) {\r\n                this.ArrowRight()\r\n            } else if (xMovement > 1) {\r\n                this.ArrowLeft()\r\n            }\r\n        } else {\r\n            if (yMovement > 1) {\r\n                this.ArrowUp()\r\n            } else if (yMovement < -1) {\r\n                this.ArrowDown()\r\n            }\r\n        }\r\n    }\r\n    keydown(e: KeyboardEvent) {\r\n        const func = (this as any)[e.key]\r\n        if (func) {\r\n            func();\r\n        }\r\n    }\r\n\r\n    ChangeDirection(directionTo: Direction, ifNot: Direction): void {\r\n        const direction = this.snake.head.direction;\r\n        this.canDrawInLoop = true;\r\n        this.moving = true;\r\n        if (direction !== ifNot)\r\n            this.snake.head.nextDirection = directionTo;\r\n    }\r\n    ArrowLeft = () => this.ChangeDirection(Direction.Left, Direction.Right)\r\n    ArrowRight = () => this.ChangeDirection(Direction.Right, Direction.Left)\r\n    ArrowUp = () => this.ChangeDirection(Direction.Up, Direction.Down)\r\n    ArrowDown = () => this.ChangeDirection(Direction.Down, Direction.Up)\r\n\r\n    touch() {\r\n        const position = this.snake.head.getnextPosition(this.StepSize)\r\n        if (this.fruit.view.touch(position)) {\r\n            this.fruit.move(this.canvas.width, this.canvas.height);\r\n            this.snake.head.addRear();\r\n            this.Score++;\r\n            this.updateScore()\r\n        }\r\n    }\r\n\r\n    updateScore() {\r\n        const score = this.Score / 4;\r\n        this.Delay = Math.ceil(score - (Math.ceil((score + 1) / 10) * 10)) * -1;\r\n        this.StepSize = this.Delay <= 5 ? 1 : 2;\r\n        this.scoreElement.textContent = `${this.Score}XP`;\r\n    }\r\n\r\n    GameOver = () => {\r\n        this.canDrawInLoop = false;\r\n        this.moving = false;\r\n        this.initSnake()\r\n        this.Draw();\r\n        this.Score = 0;\r\n        this.updateScore()\r\n    }\r\n}"],"sourceRoot":""}