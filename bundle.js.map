{"version":3,"sources":["webpack://game-snake/./src/Views/Game/game.html","webpack://game-snake/webpack/bootstrap","webpack://game-snake/./src/Views/View.ts","webpack://game-snake/./src/Utils/ObjectUtils.ts","webpack://game-snake/./src/Models/ElementView.ts","webpack://game-snake/./src/Models/BodyPart.ts","webpack://game-snake/./src/Enums/Direction.ts","webpack://game-snake/./src/Models/Head.ts","webpack://game-snake/./src/Models/Snake.ts","webpack://game-snake/./src/Models/Position.ts","webpack://game-snake/./src/Models/Fruit.ts","webpack://game-snake/./src/Views/Game/game.ts","webpack://game-snake/./src/main.ts"],"names":["module","exports","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","View","parent","this","htmlString","innerHTML","ObjectUtils","obj","cloneObj","__proto__","ElementView","position","size","clone","equals","context","fillRect","x","y","Direction","BodyPart","rear","addRear","moveTo","fillStyle","toView","draw","headPosition","touch","touchHead","Head","OnTouchMargin","direcao","Left","maxX","Right","Up","maxY","Down","canvas","Object","assign","nextDirecao","width","height","touchBody","OnTouchBody","Snake","head","Position","Fruit","Math","random","Game","ChangeDirection","canDrawInLoop","initSnake","Draw","html","require","render","document","getElementById","getContext","Resize","fruit","DrawInLoop","Events","snake","GameOver","clearRect","next","drawHead","setTimeout","documentElement","offsetHeight","clientHeight","getElementsByTagName","setAttribute","window","innerHeight","gameContainer","querySelector","offsetWidth","blockSize","addEventListener","e","keydown","touchstart","touchend","touches","clientX","clientY","touchstartPosition","preventDefault","changedTouches","xMovement","yMovement","abs","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","func","key","directionTo","ifNot","direction","move","navigator","serviceWorker","register","then","registration","console","log","registrationError","init"],"mappings":"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","file":"bundle.js","sourcesContent":["// Module\nvar code = \"<header> <div class=\\\"content-center\\\"> <h1>Snake</h1> </div> </header> <section> <div class=\\\"game-container content-center\\\"> <canvas id=\\\"game\\\"></canvas> </div> </section>\";\n// Exports\nmodule.exports = code;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export class View {\r\n\r\n    parent: HTMLElement;\r\n\r\n    constructor(parent: HTMLElement) {\r\n        this.parent = parent;\r\n    }\r\n\r\n    render(htmlString: string) {\r\n        this.parent.innerHTML = htmlString;\r\n    }\r\n}","export class ObjectUtils {\r\n  static clone<T>(obj: T): T {\r\n    const cloneObj = { ...obj } as any;\r\n    cloneObj.__proto__ = (obj as any).__proto__;\r\n    return cloneObj;\r\n  }\r\n}","import { Position } from './Position';\r\nimport { ObjectUtils } from '../Utils/ObjectUtils';\r\n\r\nexport class ElementView {\r\n    position: Position;\r\n    size: number;\r\n    constructor(position: Position, size: number) {\r\n        this.position = position;\r\n        this.size = size;\r\n    }\r\n    moveTo(position: Position) {\r\n        this.position = ObjectUtils.clone(position);\r\n    }\r\n    touch(position: Position): boolean {\r\n        return this.position.equals(position);\r\n    }\r\n    protected toView(context: CanvasRenderingContext2D) {\r\n        context.fillRect(this.position.x, this.position.y, this.size, this.size);\r\n    }\r\n}\r\n","import { Position } from './Position';\r\nimport { ObjectUtils } from '../Utils/ObjectUtils';\r\nimport { ElementView } from './ElementView';\r\n\r\nexport class BodyPart extends ElementView {\r\n    rear: BodyPart;\r\n\r\n    addRear() {\r\n        if (this.rear) {\r\n            this.rear.addRear();\r\n        } else {\r\n            this.rear = new BodyPart(ObjectUtils.clone(this.position), this.size);\r\n        }\r\n    }\r\n    moveTo(position: Position) {\r\n        this.rear?.moveTo(this.position);\r\n        super.moveTo(position);\r\n    }\r\n    draw(context: CanvasRenderingContext2D) {\r\n        context.fillStyle = '#0F0FFF';\r\n        this.toView(context);\r\n        this.rear?.draw(context);\r\n    }\r\n    touchHead(headPosition:Position): boolean {\r\n        return this.touch(headPosition) || this.rear?.touchHead(headPosition);\r\n    }\r\n\r\n}\r\n","export enum Direction {\r\n    Up, Down, Left, Right\r\n}","import { BodyPart } from './BodyPart';\r\nimport { Direction } from '../Enums/Direction';\r\n\r\nexport class Head extends BodyPart {\r\n    direcao: Direction;\r\n    nextDirecao: Direction;\r\n    OnTouchMargin: () => void;\r\n    OnTouchBody: () => void;\r\n    Left() {\r\n        if (this.position.x > 0) {\r\n            this.position.x = this.position.x - this.size\r\n        }\r\n        else {\r\n            this.OnTouchMargin();\r\n        };\r\n        this.direcao = Direction.Left;\r\n    }\r\n    Right(maxX: number) {\r\n        if (this.position.x < maxX - this.size) {\r\n            this.position.x = this.position.x + this.size;\r\n        } else {\r\n            this.OnTouchMargin();\r\n        }\r\n        this.direcao = Direction.Right;\r\n    }\r\n    Up() {\r\n        if (this.position.y > 0) {\r\n            this.position.y = this.position.y - this.size;\r\n        } else {\r\n            this.OnTouchMargin();\r\n        }\r\n        this.direcao = Direction.Up;\r\n    }\r\n    Down(maxY: number) {\r\n        if (this.position.y < maxY - this.size) {\r\n            this.position.y = this.position.y + this.size;\r\n        } else {\r\n            this.OnTouchMargin();\r\n        }\r\n        this.direcao = Direction.Down;\r\n    }\r\n\r\n    next(canvas: HTMLCanvasElement): boolean {\r\n        this.rear?.moveTo(Object.assign(this.position));\r\n        const direcion = this.nextDirecao != null ? this.nextDirecao : this.direcao;\r\n        switch (direcion) {\r\n            case Direction.Left:\r\n                this.Left();\r\n                break;\r\n            case Direction.Right:\r\n                this.Right(canvas.width);\r\n                break;\r\n            case Direction.Up:\r\n                this.Up();\r\n                break;\r\n            case Direction.Down:\r\n                this.Down(canvas.height);\r\n                break;\r\n        }\r\n        this.nextDirecao = null;\r\n        if (this.touchBody()) {\r\n            this.OnTouchBody?.();\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    drawHead(canvas: HTMLCanvasElement, context: CanvasRenderingContext2D, move = true) {\r\n        this.rear?.draw(context);\r\n        context.fillStyle = '#FF0000';\r\n        this.toView(context);\r\n    }\r\n    touchBody(): boolean {\r\n        return this.touch(this.rear?.position) || this.rear?.touchHead(this.position);\r\n    }\r\n}\r\n","import { Head } from \"./Head\";\r\nimport { Position } from \"./Position\";\r\n\r\nexport class Snake {\r\n    head: Head;\r\n    size = 50;\r\n    \r\n    constructor(position: Position) {\r\n        this.head = new Head(position, this.size);\r\n    }\r\n}\r\n\r\n","export class Position {\r\n    x: number;\r\n    y: number;\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    equals(position: Position) {\r\n        return this.x === position?.x && this.y === position?.y\r\n    }\r\n\r\n}\r\n","import { ElementView } from './ElementView';\r\nimport { Position } from './Position';\r\n\r\nexport class Fruit extends ElementView {\r\n\r\n    draw(context: CanvasRenderingContext2D) {\r\n        context.fillStyle = '#FFF000';\r\n        super.toView(context);\r\n    }\r\n    move(maxX: number, maxY: number) {\r\n        let x = Math.random() * maxX;\r\n        x = x - (x % this.size);\r\n        let y = Math.random() * maxY;\r\n        y = y - (y % this.size);\r\n        this.moveTo(new Position(x, y));\r\n    }\r\n\r\n}","import { View } from '../View';\r\nimport { Snake } from '../../Models/Snake';\r\nimport { Fruit } from '../../Models/Fruit';\r\nimport { Position } from '../../Models/Position';\r\nimport { Direction } from '../../Enums/Direction';\r\nexport class Game extends View {\r\n\r\n    touchstartPosition = new Position(0, 0)\r\n    blockSize = 50;\r\n    canvas: HTMLCanvasElement;\r\n    context: CanvasRenderingContext2D;\r\n\r\n    canDrawInLoop = false;\r\n    snake: Snake;\r\n    fruit: Fruit;\r\n    step = 50;\r\n\r\n    init() {\r\n        const html = require('./game.html');\r\n        this.render(html);\r\n        this.canvas = document.getElementById('game') as HTMLCanvasElement;\r\n        this.context = this.canvas.getContext('2d');\r\n        this.Resize();\r\n        this.initSnake()\r\n        this.fruit = new Fruit(new Position(200, 200), 50)\r\n        this.DrawInLoop();\r\n        this.Draw();\r\n        this.Events();\r\n\r\n    }\r\n    initSnake() {\r\n        this.snake = new Snake(new Position(0, 0));\r\n        this.snake.head.OnTouchMargin = this.GameOver;\r\n    }\r\n    Draw() {\r\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.touch();\r\n        if (this.snake.head.next(this.canvas)) {\r\n            this.snake.head.drawHead(this.canvas, this.context);\r\n        } else {\r\n            this.GameOver()\r\n        }\r\n        this.fruit.draw(this.context);\r\n    }\r\n\r\n    DrawInLoop() {\r\n        if (this.canDrawInLoop) { this.Draw(); }\r\n        setTimeout(() => { this.DrawInLoop() }, 100);\r\n    }\r\n    Resize() {\r\n        const navH = document.documentElement.offsetHeight - document.documentElement.clientHeight;\r\n        document.getElementsByTagName('body')[0].setAttribute('style', `max-height: ${window.innerHeight}px`);\r\n        const gameContainer = document.querySelector('.game-container') as HTMLElement;\r\n        const offsetHeight = gameContainer.offsetHeight\r\n        const offsetWidth = gameContainer.offsetWidth\r\n        this.canvas.height = offsetHeight - (offsetHeight % this.blockSize);\r\n        this.canvas.width = offsetWidth - (offsetWidth % this.blockSize);\r\n    }\r\n\r\n    Events() {\r\n        window.addEventListener('resize', (e) => { this.Resize(); });\r\n        window.addEventListener('keydown', (e) => { this.keydown(e) });\r\n        window.addEventListener('touchstart', (e) => { this.touchstart(e) });\r\n        window.addEventListener('touchend', (e) => { this.touchend(e) });\r\n    }\r\n    touchstart(e: TouchEvent) {\r\n        const x = e.touches[0].clientX;\r\n        const y = e.touches[0].clientY;\r\n        this.touchstartPosition = new Position(x, y);\r\n    }\r\n    touchend(e: TouchEvent) {\r\n        e.preventDefault()\r\n        const x = e.changedTouches[0].clientX;\r\n        const y = e.changedTouches[0].clientY;\r\n        const touchstart = this.touchstartPosition;\r\n        const touchend = new Position(x, y);\r\n        const xMovement = touchstart.x - touchend.x;\r\n        const yMovement = touchstart.y - touchend.y;\r\n        const moveInX = Math.abs(xMovement) > Math.abs(yMovement)\r\n        if (moveInX) {\r\n            if (xMovement < -1) {\r\n                this.ArrowRight()\r\n            } else if (xMovement > 1) {\r\n                this.ArrowLeft()\r\n            }\r\n        } else {\r\n            if (yMovement > 1) {\r\n                this.ArrowUp()\r\n            } else if (yMovement < -1) {\r\n                this.ArrowDown()\r\n            }\r\n        }\r\n    }\r\n    keydown(e: KeyboardEvent) {\r\n        const func = (this as any)[e.key]\r\n        if (func) {\r\n            func();\r\n        }\r\n    }\r\n\r\n    ChangeDirection(directionTo: Direction, ifNot: Direction): void {\r\n        const direction = this.snake.head.direcao;\r\n        this.canDrawInLoop = true;\r\n        if (direction !== ifNot)\r\n            this.snake.head.nextDirecao = directionTo;\r\n    }\r\n    ArrowLeft = () => this.ChangeDirection(Direction.Left, Direction.Right)\r\n    ArrowRight = () => this.ChangeDirection(Direction.Right, Direction.Left)\r\n    ArrowUp = () => this.ChangeDirection(Direction.Up, Direction.Down)\r\n    ArrowDown = () => this.ChangeDirection(Direction.Down, Direction.Up)\r\n\r\n    touch() {\r\n        if (this.snake.head.position.equals(this.fruit.position)) {\r\n            this.fruit.move(this.canvas.width, this.canvas.height);\r\n            this.snake.head.addRear();\r\n        }\r\n    }\r\n\r\n    GameOver = () => {\r\n        this.canDrawInLoop = false;\r\n        this.initSnake()\r\n        this.Draw();\r\n    }\r\n}","import './index.scss';\r\nimport './manifest.json'\r\nimport { Game } from './Views/Game/game';\r\n\r\n\r\nif ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      navigator.serviceWorker.register('/service-worker.js').then(registration => {\r\n        console.log('SW registered: ', registration);\r\n      }).catch(registrationError => {\r\n        console.log('SW registration failed: ', registrationError);\r\n      });\r\n    });\r\n  }\r\n\r\nconst base = document.getElementById('base');\r\nconst game = new Game(base);\r\ngame.init();\r\n"],"sourceRoot":""}